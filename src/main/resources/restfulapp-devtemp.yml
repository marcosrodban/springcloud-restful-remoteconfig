#este fichero es el que guardara en el servidor de configuracion
spring:
  application:
    name: restfulapp
  #configuracion para los servidores de kafka
  kafka:
    consumer:
      bootstrap-servers: 192.168.1.126:9092,192.168.1.126:9093,192.168.1.126:9094
config:
  key: dev

#configuracion del logging del servicio

logging:
  config: /app/conf/log4j2-spring.xml
   

server:
  port: 8899
#variables de configuracion del aplicativo
aplicacion:
  name: miaplicacion
  texto: hola555546465465
  #esto es temporal
  zuulconfig:
    host: 192.168.1.126
    port: 10001
  #parametrizacion para kafka
  kafka:
    topic-name: TOPIC
    group-id: grupoprueba
    enable-consumer: false
    topic-json-name: JSONTOPIC


#configuracion para el actuator de spring boot, para que muestre todos los filtros web
management:
  endpoints:
    web:
      exposure:
        include: '*'



#configuracion del circuit breaker (resilance4j)
           
resilience4j:
  circuitbreaker:
  #el orden de ejecucion de este tipo de circuito dentro de la lista [ Retry ( CircuitBreaker ( RateLimiter ( TimeLimiter ( Bulkhead ( Function ) ) ) ) ) ]
    circuit-breaker-aspect-order: 1
    configs:
      shared:
        register-health-indicator: true
        sliding-window-type: count_based
        sliding-window-size: 5
        failure-rate-threshold: 40
        slow-call-rate-threshold: 40
        permitted-number-of-calls-in-half-open-state: 1
        max-wait-duration-in-half-open-state: 10s
        wait-duration-in-open-state: 10s
        slow-call-duration-threshold: 2s
        writable-stack-trace-enabled: true
        automatic-transition-from-open-to-half-open-enabled: true
    instances:
      example:
        base-config: shared
  timelimiter:
    circuit-breaker-aspect-order: 2
    configs:
      shared:
        timeout-duration: 2s
        cancel-running-future: true
    instances:
      example:
        base-config: shared
        
        
        

#configuracion de eureka
eureka:
  client:
    #telling the server to register himself in the service registry of the other servers
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
    #cuando llegue el momento esto hay que cambiarlo por la url del balanceador zuul
      defaultZone: http://192.168.1.126:9002/eureka/,http://192.168.1.126:9003/eureka/
    healthcheck:
      enabled: true
  instance:
    #colocamos el valor preferIpAddres a false para poder poner nosotros el hostname que se va a registrar
    preferIpAddress: false
    hostname: ${EUREKA_SERVER_HOST}
    #instanceId = ${spring.application.name}:${random.value}
    secure-port: 10001
    secure-port-enabled: false
    non-secure-port: ${EUREKA_SERVER_PORT}
    non-secure-port-enabled: true
    initialStatus: UP
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 30
    leaseExpirationDurationInSeconds: 5
    #healthCheckUrlPath: /actuator/health
    #statusPageUrlPath: /actuator/info

  #wait time for subsequent sync
    #waitTimeInMsWhenSyncEmpty: 5000
